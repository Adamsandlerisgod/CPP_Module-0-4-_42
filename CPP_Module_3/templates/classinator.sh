#!/bin/bash

read -p "Enter the class name: " class_name

# Create header file
header_file="${class_name}.hpp"
echo "Creating ${header_file}..."
echo "#ifndef ${class_name}_HPP" > "${header_file}"
echo "# define ${class_name}_HPP" >> "${header_file}"
echo "#include <iostream>" >> "${header_file}"
echo ""
echo "" >> "${header_file}"
echo "class ${class_name} {" >> "${header_file}"
echo "	public:" >> "${header_file}"
echo "		// Default constructor" >> "${header_file}"
echo "		${class_name}();" >> "${header_file}"
echo ""
echo "		// Copy constructor" >> "${header_file}"
echo "    ${class_name}(const ${class_name}& other);" >> "${header_file}"
echo ""
echo "		// Copy assignment operator" >> "${header_file}"
echo "		${class_name}& operator=(const ${class_name}& other);" >> "${header_file}"
echo ""
echo "		// Destructor" >> "${header_file}"
echo "		~${class_name}();" >> "${header_file}"
echo "};" >> "${header_file}"
echo ""
echo "#endif // ${class_name}_HPP" >> "${header_file}"

# Create source file
source_file="${class_name}.cpp"
echo "Creating ${source_file}..."
echo "#include \"${class_name}.hpp\"" > "${source_file}"
echo ""
echo ""
echo "// Default constructor" >> "${source_file}"
echo "${class_name}::${class_name}() {" >> "${source_file}"
echo "	std::cout << \"Default constructor called\" << std::endl;" >> "${source_file}"
echo "}" >> "${source_file}"
echo ""
echo "// Copy constructor" >> "${source_file}"
echo "${class_name}::${class_name}(const ${class_name}& other) {" >> "${source_file}"
echo "	std::cout << \"Copy consrtuctor called\" << std::endl;" >> "${source_file}"
echo "    // Implementation here" >> "${source_file}"
echo "}" >> "${source_file}"
echo ""
echo "// Copy assignment operator" >> "${source_file}"
echo "${class_name}& ${class_name}::operator=(const ${class_name}& other) {" >> "${source_file}"
echo "	std::cout << \"Copy Assignment operator called\" << std::endl;" >> "${source_file}"
echo "    if (this != &other) {" >> "${source_file}"
echo "        // Implementation here" >> "${source_file}"
echo "    }" >> "${source_file}"
echo "    return *this;" >> "${source_file}"
echo "}" >> "${source_file}"
echo ""
echo "// Destructor" >> "${source_file}"
echo "${class_name}::~${class_name}() {" >> "${source_file}"
echo "	std::cout << \"Destructor called\" << std::endl;" >> "${source_file}"
echo "}" >> "${source_file}"

echo "Files created successfully: ${header_file}, ${source_file}"
